import 'bloc/reset_password_bloc.dart';import 'models/reset_password_model.dart';import 'package:flutter/material.dart';import 'package:kwstas_s_application2/core/app_export.dart';import 'package:kwstas_s_application2/core/utils/validation_functions.dart';import 'package:kwstas_s_application2/widgets/custom_outlined_button.dart';import 'package:kwstas_s_application2/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class ResetPasswordScreen extends StatelessWidget {ResetPasswordScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<ResetPasswordBloc>(create: (context) => ResetPasswordBloc(ResetPasswordState(resetPasswordModelObj: ResetPasswordModel()))..add(ResetPasswordInitialEvent()), child: ResetPasswordScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 9.h, vertical: 18.v), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgEvaArrowBackOutlineBlack900, height: 39.v, width: 36.h, margin: EdgeInsets.only(bottom: 37.v), onTap: () {onTapImgEvaArrowBackOutline(context);}), Container(height: 68.v, width: 45.h, margin: EdgeInsets.only(left: 149.h, top: 7.v), child: Stack(alignment: Alignment.center, children: [CustomImageView(imagePath: ImageConstant.imgSettings, height: 68.v, width: 45.h, alignment: Alignment.center), CustomImageView(imagePath: ImageConstant.imgSettings, height: 68.v, width: 45.h, alignment: Alignment.center)]))])), SizedBox(height: 21.v), Text("lbl_reset_password".tr, style: CustomTextStyles.displayMediumInter), SizedBox(height: 15.v), Text("msg_you_re_almost_there".tr, style: CustomTextStyles.headlineSmallInterBlack900Light), SizedBox(height: 32.v), Container(width: 355.h, margin: EdgeInsets.only(left: 29.h, right: 26.h), child: Text("msg_please_enter_a_new".tr, maxLines: 3, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.headlineSmallInterBlack900Light)), SizedBox(height: 50.v), Padding(padding: EdgeInsets.only(left: 37.h, right: 34.h), child: BlocSelector<ResetPasswordBloc, ResetPasswordState, TextEditingController?>(selector: (state) => state.newpasswordController, builder: (context, newpasswordController) {return CustomTextFormField(controller: newpasswordController, hintText: "msg_create_new_password".tr, hintStyle: theme.textTheme.headlineSmall!, textInputType: TextInputType.visiblePassword, validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: true);})), SizedBox(height: 17.v), Padding(padding: EdgeInsets.only(left: 37.h, right: 34.h), child: BlocSelector<ResetPasswordBloc, ResetPasswordState, TextEditingController?>(selector: (state) => state.newpasswordController1, builder: (context, newpasswordController1) {return CustomTextFormField(controller: newpasswordController1, hintText: "msg_confirm_new_password".tr, hintStyle: theme.textTheme.headlineSmall!, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: true);})), SizedBox(height: 17.v), CustomOutlinedButton(text: "lbl_submit".tr, margin: EdgeInsets.only(left: 37.h, right: 34.h), onPressed: () {onTapSubmit(context);}), SizedBox(height: 18.v), Text("msg_need_help_contact".tr, style: CustomTextStyles.headlineSmallInterBlack900), SizedBox(height: 5.v)]))))); } 
/// Navigates to the profileScreen when the action is triggered.
onTapImgEvaArrowBackOutline(BuildContext context) { NavigatorService.pushNamed(AppRoutes.profileScreen, ); } 
/// Navigates to the loginNewcredentialsScreen when the action is triggered.
onTapSubmit(BuildContext context) { NavigatorService.pushNamed(AppRoutes.loginNewcredentialsScreen, ); } 
 }
