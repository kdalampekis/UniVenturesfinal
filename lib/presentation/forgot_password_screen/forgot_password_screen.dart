import 'bloc/forgot_password_bloc.dart';import 'models/forgot_password_model.dart';import 'package:flutter/material.dart';import 'package:kwstas_s_application2/core/app_export.dart';import 'package:kwstas_s_application2/core/utils/validation_functions.dart';import 'package:kwstas_s_application2/widgets/custom_outlined_button.dart';import 'package:kwstas_s_application2/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class ForgotPasswordScreen extends StatelessWidget {ForgotPasswordScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<ForgotPasswordBloc>(create: (context) => ForgotPasswordBloc(ForgotPasswordState(forgotPasswordModelObj: ForgotPasswordModel()))..add(ForgotPasswordInitialEvent()), child: ForgotPasswordScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, body: Form(key: _formKey, child: SingleChildScrollView( child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 9.h, vertical: 18.v), child: Column(children: [Align(alignment: Alignment.centerLeft, child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgEvaArrowBackOutlineBlack900, height: 39.v, width: 36.h, margin: EdgeInsets.only(bottom: 37.v), onTap: () {onTapImgEvaArrowBackOutline(context);}), CustomImageView(imagePath: ImageConstant.imgSettings, height: 68.v, width: 45.h, margin: EdgeInsets.only(left: 149.h, top: 7.v))])), SizedBox(height: 24.v), Text("msg_forgot_password".tr, style: CustomTextStyles.displayMediumInter), SizedBox(height: 10.v), Container(width: 358.h, margin: EdgeInsets.only(left: 23.h, right: 29.h), child: Text("msg_oh_no_it_happens".tr, maxLines: 3, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.headlineSmallInterBlack900)), SizedBox(height: 26.v), Container(width: 379.h, margin: EdgeInsets.only(left: 12.h, right: 20.h), child: Text("msg_please_enter_the".tr, maxLines: 4, overflow: TextOverflow.ellipsis, textAlign: TextAlign.center, style: CustomTextStyles.headlineSmallInterBlack900)), SizedBox(height: 23.v), Padding(padding: EdgeInsets.only(left: 36.h, right: 35.h), child: BlocSelector<ForgotPasswordBloc, ForgotPasswordState, TextEditingController?>(selector: (state) => state.emailController, builder: (context, emailController) {return CustomTextFormField(controller: emailController, hintText: "lbl_email".tr, hintStyle: theme.textTheme.headlineSmall!, textInputAction: TextInputAction.done, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;}, obscureText: true);})), SizedBox(height: 15.v), CustomOutlinedButton(text: "lbl_submit".tr, buttonStyle: ElevatedButton.styleFrom(
    backgroundColor: CustomTextStyles.displayMediumPrimary_1.color), margin: EdgeInsets.only(left: 38.h, right: 33.h), onPressed: () {onTapSubmit(context);}), SizedBox(height: 5.v)])))))); } 
/// Navigates to the loginScreen when the action is triggered.
onTapImgEvaArrowBackOutline(BuildContext context) { NavigatorService.pushNamed(AppRoutes.loginScreen, ); } 
/// Navigates to the forgotPasswordWrongemailScreen when the action is triggered.
onTapSubmit(BuildContext context) { NavigatorService.pushNamed(AppRoutes.forgotPasswordWrongemailScreen, ); } 
 }
