import 'bloc/facebook_signup_bloc.dart';import 'models/facebook_signup_model.dart';import 'package:flutter/material.dart';import 'package:kwstas_s_application2/core/app_export.dart';import 'package:kwstas_s_application2/core/utils/validation_functions.dart';import 'package:kwstas_s_application2/widgets/app_bar/appbar_leading_image.dart';import 'package:kwstas_s_application2/widgets/app_bar/appbar_subtitle.dart';import 'package:kwstas_s_application2/widgets/app_bar/custom_app_bar.dart';import 'package:kwstas_s_application2/widgets/custom_outlined_button.dart';import 'package:kwstas_s_application2/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class FacebookSignupScreen extends StatelessWidget {FacebookSignupScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

static Widget builder(BuildContext context) { return BlocProvider<FacebookSignupBloc>(create: (context) => FacebookSignupBloc(FacebookSignupState(facebookSignupModelObj: FacebookSignupModel()))..add(FacebookSignupInitialEvent()), child: FacebookSignupScreen()); } 
@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, appBar: _buildAppBar(context), body: Form(key: _formKey,  child: SingleChildScrollView(child: Container(width: double.maxFinite, padding: EdgeInsets.symmetric(horizontal: 48.h, vertical: 65.v), decoration: AppDecoration.fillBlue, child: Column(children: [CustomImageView(imagePath: ImageConstant.imgFacebookNewLogo2015, height: 81.v, width: 249.h, radius: BorderRadius.circular(10.h)), SizedBox(height: 66.v), BlocSelector<FacebookSignupBloc, FacebookSignupState, TextEditingController?>(selector: (state) => state.phoneController, builder: (context, phoneController) {return CustomTextFormField(controller: phoneController, hintText: "lbl_email_or_phone".tr, textInputType: TextInputType.emailAddress, validator: (value) {if (value == null || (!isValidEmail(value, isRequired: true))) {return "err_msg_please_enter_valid_email".tr;} return null;}, contentPadding: EdgeInsets.symmetric(horizontal: 24.h, vertical: 22.v), borderDecoration: TextFormFieldStyleHelper.outlineBlack, fillColor: theme.colorScheme.onPrimary.withOpacity(1));}), SizedBox(height: 20.v), BlocBuilder<FacebookSignupBloc, FacebookSignupState>(builder: (context, state) {return CustomTextFormField(controller: state.passwordController, hintText: "lbl_password".tr, textInputAction: TextInputAction.done, textInputType: TextInputType.visiblePassword, suffix: InkWell(onTap: () {context.read<FacebookSignupBloc>().add(ChangePasswordVisibilityEvent(value: !state.isShowPassword));}, child: Container(margin: EdgeInsets.fromLTRB(30.h, 20.v, 22.h, 20.v), child: CustomImageView(imagePath: ImageConstant.imgIoneyeoffoutline, height: 29.v, width: 35.h))), suffixConstraints: BoxConstraints(maxHeight: 69.v), validator: (value) {if (value == null || (!isValidPassword(value, isRequired: true))) {return "err_msg_please_enter_valid_password".tr;} return null;}, obscureText: state.isShowPassword, contentPadding: EdgeInsets.only(left: 24.h, top: 22.v, bottom: 22.v), borderDecoration: TextFormFieldStyleHelper.outlineBlack, fillColor: theme.colorScheme.onPrimary.withOpacity(1));}), SizedBox(height: 20.v), CustomOutlinedButton(height: 69.v, text: "lbl_log_in2".tr, buttonStyle: CustomButtonStyles.outlineBlack, buttonTextStyle: CustomTextStyles.titleLargeInterOnPrimaryBold, onPressed: () {onTapLogIn(context);}), SizedBox(height: 5.v)])))))); } 
/// Section Widget
PreferredSizeWidget _buildAppBar(BuildContext context) { return CustomAppBar(height: 64.v, leadingWidth: 45.h, leading: AppbarLeadingImage(imagePath: ImageConstant.imgEvaArrowBackOutline, margin: EdgeInsets.only(left: 9.h, top: 9.v, bottom: 7.v), onTap: () {onTapEvaArrowBackOutline(context);}), centerTitle: true, title: AppbarSubtitle(text: "msg_log_in_with_facebook".tr), styleType: Style.bgFill); } 
/// Navigates to the signupScreen when the action is triggered.
onTapEvaArrowBackOutline(BuildContext context) { NavigatorService.pushNamed(AppRoutes.signupScreen, ); } 
/// Navigates to the successfullySignedUpScreen when the action is triggered.
onTapLogIn(BuildContext context) { NavigatorService.pushNamed(AppRoutes.successfullySignedUpScreen, ); } 
 }
